version: '3.9'

services:

  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3.13-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

  frontend:
    container_name: 'frontend'
    build:
      context: ../Frontend/
      dockerfile: Dockerfile
    ports:
      - "4200:4200"

  apigateway:
    build:
      context: ../APIGateway/
      dockerfile: Dockerfile
    container_name: 'api-gateway'
    ports:
      - "8080:8080"
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest
#      - TIMEOUT=3

  userservice:
    build:
      context: ../UserService/
      dockerfile: Dockerfile
    container_name: 'user-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest
      #- TIMEOUT=3

  paymentservice:
    build:
      context: ../PaymentService/
      dockerfile: Dockerfile
    container_name: 'payment-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest

  tripservice:
    build:
      context: ../TripService/
      dockerfile: Dockerfile
    container_name: 'trip-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest
#      - MONGO_USER=root
#      - MONGO_PWD=example
#      - MONGO_HOST=mongo-db
#      - MONGO_DATABASE=trip_service_db
#      - MONGO_PORT=27017

  mongo-db:
    image: mongo
    container_name: 'mongo-db'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: rsww

  accommodationservice:
    build:
      context: ../AccommodationService/
      dockerfile: Dockerfile
    container_name: 'accommodation-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest
      - POSTGRES_USR=admin
      - POSTGRES_PWD=admin
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=accommodation
      - POSTGRES_PORT=5432

  offerservice:
    build:
      context: ../OfferService/
      dockerfile: Dockerfile
    container_name: 'offer-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest

  transportservice:
    build:
      context: ../TransportService/
      dockerfile: Dockerfile
    container_name: 'transport-service'
    depends_on:
      - rabbitmq
    environment:
      - RABBIT_HOST=rabbitmq
      - RABBIT_PORT=5672
      - RABBIT_USR=guest
      - RABBIT_PWD=guest
      - POSTGRES_USR=admin
      - POSTGRES_PWD=admin
      - POSTGRES_HOST=postgres
      - POSTGRES_DATABASE=transport
      - POSTGRES_PORT=5432

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-db:27017/

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=rsww
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    ports:
      - "8082:8080"

  rproxy:
    build: ./ctx-nginx
    ports:
      - "8088:8088"
    depends_on:
      - frontend
      - apigateway